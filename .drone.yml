pipeline:
  checkout:
    image: docker.moxa.online/build/amd64-jessie:latest
    commands:
      - git checkout --track -b ${DRONE_BRANCH} origin/${DRONE_BRANCH}
    when:
      event:
        exclude: [ pull_request ]
      branch:
        exclude: [ master ]

  test:
    image: docker.moxa.online/build/amd64-jessie-python:latest
    commands:
      - set-cache
      - set
      - pip install -r requirements.txt
      - make test
    volumes:
      - /mnt/cache/:/mnt/cache:z

  build_pkgs:
    image: docker.moxa.online/build/amd64-jessie-python:latest
    commands:
      - set-cache
      - set
      - make dist
      - make -C build-deb
    when:
      branch: [ master, develop ]
      event: [ push, pull_request, deployment ]
    volumes:
      - /mnt/cache/:/mnt/cache:z

  upload_experimental_deb_pkgs:
    image: docker.moxa.online/build/amd64-jessie:latest
    environment:
      - DEB_TARGET=/mnt/storage/debian/pool/experimental/main/all/sanji-bundle/
      - DEB_ASSETS=./build-deb/*.deb ./build-deb/*.dsc ./build-deb/*.changes
    commands:
      - mkdir -p $${DEB_TARGET}
      - cp $${DEB_ASSETS} $${DEB_TARGET}
      - find $${DEB_TARGET} -name '*.deb' -printf "%T+  %p \n" | sort -nr | head -n 1
    when:
      branch: develop
      event: [ push, pull_request ]
    volumes:
      - /mnt/storage:/mnt/storage:z

  upload_unstable_deb_pkgs:
    image: docker.moxa.online/build/amd64-jessie:latest
    environment:
      - DEB_TARGET=/mnt/storage/debian/pool/unstable/main/all/sanji-bundle/
      - DEB_ASSETS=./build-deb/*.deb ./build-deb/*.dsc ./build-deb/*.changes
    commands:
      - mkdir -p $${DEB_TARGET}
      - cp $${DEB_ASSETS} $${DEB_TARGET}
      - find $${DEB_TARGET} -name '*.deb' -printf "%T+  %p \n" | sort -nr | head -n 1
    when:
      branch: develop
      event: [ push, deployment ]
    volumes:
      - /mnt/storage:/mnt/storage:z

  upload_stable_deb_pkgs:
    image: docker.moxa.online/build/amd64-jessie:latest
    environment:
      - DEB_TARGET=/mnt/storage/debian/pool/stable/main/all/sanji-bundle/
      - DEB_ASSETS=./build-deb/*.deb ./build-deb/*.dsc ./build-deb/*.changes
    commands:
      - mkdir -p $${DEB_TARGET}
      - cp $${DEB_ASSETS} $${DEB_TARGET}
      - find $${DEB_TARGET} -name '*.deb' -printf "%T+  %p \n" | sort -nr | head -n 1
    when:
      branch: master
      event: [ push, deployment ]
    volumes:
      - /mnt/storage:/mnt/storage:z

  update_dpkg_server_index:
    image: docker.moxa.online/plugins/debian-repo-update:latest
    environment:
      - NAMESPACE=${DRONE_BRANCH}
    when:
      branch: [ master, develop, testing ]
      event: [ push, pull_request ]
      status: success
    volumes:
      - /mnt/storage:/mnt/storage:z

  notify_to_slack_channel:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: droneci
    username: drone
    when:
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        build {{build.number}} succeeded. Good job.
        - *repo:* {{repo.name}}
        - *author:* {{build.author}}
        - *event:* {{build.event}}
        - *commit:* {{build.commit}}
        - *link:* {{build.link}}
      {{else}}
        build {{build.number}} failed. Fix me please.
        - *repo:* {{repo.name}}
        - *author:* {{build.author}}
        - *event:* {{build.event}}
        - *commit:* {{build.commit}}
        - *link:* {{build.link}}
      {{/success}}
